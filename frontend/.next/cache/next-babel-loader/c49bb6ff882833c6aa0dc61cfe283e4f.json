{"ast":null,"code":"import _defineProperty from \"/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nexport default function useForm() {\n  _s();\n\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _useState = useState(initial),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var initialValues = Object.values(initial).join('');\n  useEffect(function () {\n    setInputs(initial);\n  }, [initialValues]);\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name,\n        type = _e$target.type;\n    console.log(value);\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      var _e$target$files = _slicedToArray(e.target.files, 1);\n\n      value = _e$target$files[0];\n    }\n\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, name, value)));\n  }\n\n  function resetForm() {\n    setInputs(initial);\n  }\n\n  function clearForm() {\n    var blankState = Object.fromEntries(Object.entries(inputs).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return [key, ''];\n    }));\n    setInputs(blankState);\n  }\n\n  return {\n    inputs: inputs,\n    handleChange: handleChange,\n    resetForm: resetForm,\n    clearForm: clearForm\n  };\n}\n\n_s(useForm, \"Ojj4hh6HHOsjtwWnkUaVb5V0o3U=\");","map":{"version":3,"sources":["/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/lib/useForm.js"],"names":["useEffect","useState","useForm","initial","inputs","setInputs","initialValues","Object","values","join","handleChange","e","target","value","name","type","console","log","parseInt","files","resetForm","clearForm","blankState","fromEntries","entries","map","key"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,OAAT,GAA+B;AAAA;;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAAA,kBAChBF,QAAQ,CAACE,OAAD,CADQ;AAAA,MACrCC,MADqC;AAAA,MAC7BC,SAD6B;;AAE5C,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcL,OAAd,EAAuBM,IAAvB,CAA4B,EAA5B,CAAtB;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,SAAS,CAACF,OAAD,CAAT;AACD,GAFQ,EAEN,CAACG,aAAD,CAFM,CAAT;;AAIA,WAASI,YAAT,CAAsBC,CAAtB,EAAyB;AAAA,oBACKA,CAAC,CAACC,MADP;AAAA,QACjBC,KADiB,aACjBA,KADiB;AAAA,QACVC,IADU,aACVA,IADU;AAAA,QACJC,IADI,aACJA,IADI;AAEvBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,QAAIE,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,KAAK,GAAGK,QAAQ,CAACL,KAAD,CAAhB;AACD;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AAAA,2CACTJ,CAAC,CAACC,MAAF,CAASO,KADA;;AAClBN,MAAAA,KADkB;AAEpB;;AACDR,IAAAA,SAAS,iCACJD,MADI,2BAENU,IAFM,EAECD,KAFD,GAAT;AAID;;AAED,WAASO,SAAT,GAAqB;AACnBf,IAAAA,SAAS,CAACF,OAAD,CAAT;AACD;;AAED,WAASkB,SAAT,GAAqB;AACnB,QAAMC,UAAU,GAAGf,MAAM,CAACgB,WAAP,CACjBhB,MAAM,CAACiB,OAAP,CAAepB,MAAf,EAAuBqB,GAAvB,CAA2B;AAAA;AAAA,UAAEC,GAAF;AAAA,UAAOb,KAAP;;AAAA,aAAkB,CAACa,GAAD,EAAM,EAAN,CAAlB;AAAA,KAA3B,CADiB,CAAnB;AAGArB,IAAAA,SAAS,CAACiB,UAAD,CAAT;AACD;;AAED,SAAO;AACLlB,IAAAA,MAAM,EAANA,MADK;AAELM,IAAAA,YAAY,EAAZA,YAFK;AAGLU,IAAAA,SAAS,EAATA,SAHK;AAILC,IAAAA,SAAS,EAATA;AAJK,GAAP;AAMD;;GAxCuBnB,O","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useForm(initial = {}) {\n  const [inputs, setInputs] = useState(initial);\n  const initialValues = Object.values(initial).join('');\n\n  useEffect(() => {\n    setInputs(initial);\n  }, [initialValues]);\n\n  function handleChange(e) {\n    let { value, name, type } = e.target;\n    console.log(value);\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n    if (type === 'file') {\n      [value] = e.target.files;\n    }\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  }\n\n  function resetForm() {\n    setInputs(initial);\n  }\n\n  function clearForm() {\n    const blankState = Object.fromEntries(\n      Object.entries(inputs).map(([key, value]) => [key, ''])\n    );\n    setInputs(blankState);\n  }\n\n  return {\n    inputs,\n    handleChange,\n    resetForm,\n    clearForm,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}