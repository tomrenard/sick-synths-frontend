{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/components/Orders.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport DisplayError from './ErrorMessage';\nimport OrderItemStyles from './styles/OrderItemStyles';\nimport formatMoney from '../lib/formatMoney';\n/* eslint-disable react/prop-types */\n\nconst ORDERS_QUERY = gql`\n  query ORDERS_QUERY {\n    allOrders {\n      id\n      total\n      charge\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nconst OrderUlStyles = styled.ul.withConfig({\n  displayName: \"Orders__OrderUlStyles\",\n  componentId: \"sc-1km0nir-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(350px,1fr));grid-gap:4rem;\"]);\nexport default function Orders() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ORDERS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this);\n  const {\n    allOrders\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You have \", allOrders.length, \" orders completed\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderUlStyles, {\n      children: allOrders.map(order => /*#__PURE__*/_jsxDEV(OrderItemStyles, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/order/${order.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/components/Orders.js"],"names":["useQuery","gql","styled","Link","DisplayError","OrderItemStyles","formatMoney","ORDERS_QUERY","OrderUlStyles","ul","Orders","data","loading","error","allOrders","length","map","order","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA;;AACA,MAAMC,YAAY,GAAGN,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;AAyBA,MAAMO,aAAa,GAAGN,MAAM,CAACO,EAAV;AAAA;AAAA;AAAA,4FAAnB;AAMA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bb,QAAQ,CAACO,YAAD,CAAzC;AACA,MAAIK,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,IAAtB;AACA,sBACE;AAAA,4BACE;AAAA,8BAAcG,SAAS,CAACC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,gBACGD,SAAS,CAACE,GAAV,CAAeC,KAAD,iBACb,QAAC,eAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,UAASA,KAAK,CAACC,EAAG;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport DisplayError from './ErrorMessage';\nimport OrderItemStyles from './styles/OrderItemStyles';\nimport formatMoney from '../lib/formatMoney';\n\n/* eslint-disable react/prop-types */\nconst ORDERS_QUERY = gql`\n  query ORDERS_QUERY {\n    allOrders {\n      id\n      total\n      charge\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst OrderUlStyles = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  grid-gap: 4rem;\n`;\n\nexport default function Orders() {\n  const { data, loading, error } = useQuery(ORDERS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <DisplayError error={error} />;\n  const { allOrders } = data;\n  return (\n    <div>\n      <h2>You have {allOrders.length} orders completed</h2>\n      <OrderUlStyles>\n        {allOrders.map((order) => (\n          <OrderItemStyles>\n            <Link href={`/order/${order.id}`} />\n          </OrderItemStyles>\n        ))}\n      </OrderUlStyles>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}