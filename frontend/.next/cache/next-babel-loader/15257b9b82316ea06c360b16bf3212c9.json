{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/components/SingleOrder.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ORDER_QUERY($id: ID!) {\\n    order: Order(where: { id: $id }) {\\n      id\\n      total\\n      charge\\n      user {\\n        id\\n      }\\n      items {\\n        id\\n        name\\n        description\\n        price\\n        quantity\\n        photo {\\n          image {\\n            publicUrlTransformed\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n/* eslint-disable react/prop-types */\n\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrder(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"hey \", id, \" mamen\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SingleOrder, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrder\");","map":{"version":3,"sources":["/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/components/SingleOrder.js"],"names":["useQuery","gql","SINGLE_ORDER_QUERY","SingleOrder","id","variables","data","loading","error"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA;;AACA,IAAMC,kBAAkB,GAAGD,GAAH,mBAAxB;AAyBA,eAAe,SAASE,WAAT,OAA6B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACTJ,QAAQ,CAACE,kBAAD,EAAqB;AAC5DG,IAAAA,SAAS,EAAE;AACTD,MAAAA,EAAE,EAAFA;AADS;AADiD,GAArB,CADC;AAAA,MAClCE,IADkC,aAClCA,IADkC;AAAA,MAC5BC,OAD4B,aAC5BA,OAD4B;AAAA,MACnBC,KADmB,aACnBA,KADmB;;AAM1C,sBAAO;AAAA,uBAAQJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAPuBD,W;UACWH,Q;;;KADXG,W","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\n/* eslint-disable react/prop-types */\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    order: Order(where: { id: $id }) {\n      id\n      total\n      charge\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function SingleOrder({ id }) {\n  const { data, loading, error } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id,\n    },\n  });\n  return <p>hey {id} mamen</p>;\n}\n"]},"metadata":{},"sourceType":"module"}