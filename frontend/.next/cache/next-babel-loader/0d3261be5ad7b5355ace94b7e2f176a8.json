{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/components/Pagination.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    _allProductsMeta {\\n      count\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* eslint-disable react/prop-types */\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport DisplayError from './ErrorMessage';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nvar PAGINATION_QUERY = gql(_templateObject());\nexport default function Pagination(_ref) {\n  _s();\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(PAGINATION_QUERY),\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"...Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this);\n  var count = data._allProductsMeta.count;\n  var pageCount = Math.round(count / perPage);\n  return /*#__PURE__*/_jsxDEV(PaginationStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sick Fits - Page \", page, \" of ---\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \"\\u2190 Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Page __ of \", pageCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [count, \" Items Total\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \" Next \\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \"\\xA0\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"MadqETWYtkFh3dDWW9IjxDLlwQw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/tomrenard/code/tomrenard/sick-fits/sick-fits/frontend/components/Pagination.js"],"names":["useQuery","gql","Head","Link","DisplayError","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","page","error","loading","data","count","_allProductsMeta","pageCount","Math","round"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,gBAAgB,GAAGN,GAAH,mBAAtB;AAQA,eAAe,SAASO,UAAT,OAA8B;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACVT,QAAQ,CAACO,gBAAD,CADE;AAAA,MACnCG,KADmC,aACnCA,KADmC;AAAA,MAC5BC,OAD4B,aAC5BA,OAD4B;AAAA,MACnBC,IADmB,aACnBA,IADmB;;AAE3C,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAHgC,MAInCG,KAJmC,GAIzBD,IAAI,CAACE,gBAJoB,CAInCD,KAJmC;AAK3C,MAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAGP,OAAnB,CAAlB;AACA,sBACE,QAAC,gBAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,wCAAyBG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gCAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,iBAAIF,KAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAjBuBL,U;UACWR,Q;;;KADXQ,U","sourcesContent":["/* eslint-disable react/prop-types */\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport DisplayError from './ErrorMessage';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\n\nconst PAGINATION_QUERY = gql`\n  query {\n    _allProductsMeta {\n      count\n    }\n  }\n`;\n\nexport default function Pagination({ page }) {\n  const { error, loading, data } = useQuery(PAGINATION_QUERY);\n  if (loading) return <p>...Loading</p>;\n  if (error) return <DisplayError error={error} />;\n  const { count } = data._allProductsMeta;\n  const pageCount = Math.round(count / perPage);\n  return (\n    <PaginationStyles>\n      <Head>\n        <title>Sick Fits - Page {page} of ---</title>\n      </Head>\n      <Link href=\"/\">← Prev</Link>\n      <p>Page __ of {pageCount}</p>\n      <p>{count} Items Total</p>\n      <Link href=\"/\"> Next →</Link> \n    </PaginationStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}